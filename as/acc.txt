package com.saranya.appstroke;


import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.os.Vibrator;
import android.widget.TextView;

public class Accelback extends Activity implements SensorEventListener {

	private float lastX, lastY, lastZ;

	private SensorManager sensorManager;
	private Sensor accelerometer,gyroscope,gravity;

	private float deltaXMax = 0;
	private float deltaYMax = 0;
	private float deltaZMax = 0;
    private float X=0;
    private float Y=0;
    private float Z=0;
	private float deltaX = 0;
	private float deltaY = 0;
	private float deltaZ = 0;

	private float vibrateThreshold = 0;

	private TextView accx,accy,acz,gyx,gyy,gyz;

	public Vibrator v;

	private Context context;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.accelreadings);
		initializeViews();

		sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
		
			accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
			sensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);
			gyroscope= sensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);
			sensorManager.registerListener(this, gyroscope, SensorManager.SENSOR_DELAY_NORMAL);
			
			vibrateThreshold = accelerometer.getMaximumRange() / 2;

		//initialize vibration
		v = (Vibrator) this.getSystemService(Context.VIBRATOR_SERVICE);

	}

	public void initializeViews() {
		accx = (TextView) findViewById(R.id.accx);
		accy = (TextView) findViewById(R.id.accy);
		acz = (TextView) findViewById(R.id.acz);

		gyx = (TextView) findViewById(R.id.gyx);
		gyy = (TextView) findViewById(R.id.gyy);
		gyz = (TextView) findViewById(R.id.gyz);
	}

	//onResume() register the accelerometer for listening the events
	protected void onResume() {
		super.onResume();
		sensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_NORMAL);
		sensorManager.registerListener(this, gyroscope, SensorManager.SENSOR_DELAY_NORMAL);
	}

	//onPause() unregister the accelerometer for stop listening the events
	protected void onPause() {
		super.onPause();
		sensorManager.unregisterListener(this);
	}

	@Override
	public void onAccuracyChanged(Sensor sensor, int accuracy) {
		
	}

	@Override
	public void onSensorChanged(SensorEvent event) {
    if(event.sensor.getType()==Sensor.TYPE_ACCELEROMETER)
{
		
	
		displayCurrentValues();
		// display the max x,y,z accelerometer values
	
		// get the change of the x,y,z values of the accelerometer
		deltaX = Math.abs(lastX - event.values[0]);
		deltaY = Math.abs(lastY - event.values[1]);
		deltaZ = Math.abs(lastZ - event.values[2]);

		// if the change is below 2, it is just plain noise
		if (deltaX < 2)
			deltaX = 0;
		if (deltaY < 2)
			deltaY = 0;
		if ((deltaX > vibrateThreshold) || (deltaY > vibrateThreshold) || (deltaZ > vibrateThreshold)) {
			v.vibrate(50);
		}
if (deltaX > 17 || deltaY>17 || deltaZ>17) {
			
			Intent intent=new Intent(context,Alarm.class);
			startActivity(intent);
	}
    else if(event.sensor.getType()==Sensor.TYPE_GYROSCOPE)
    {
     X = Math.abs(event.values[0]);
     Y = Math.abs(event.values[1]);
    Z = Math.abs(event.values[2]);
		gyx.setText("on x-axis :"+Float.toString(X));
		gyy.setText("on y-axis :"+Float.toString(Y));
		gyz.setText("on z-axis :"+Float.toString(Z));

    }

	}	


}

	private void displayCurrentValues() {
		// TODO Auto-generated method stub
		accx.setText("on x-axis :"+Float.toString(deltaX));
		accy.setText("on y-axis :"+Float.toString(deltaY));
		acz.setText("on z-axis :"+Float.toString(deltaZ));
		
	}

}

